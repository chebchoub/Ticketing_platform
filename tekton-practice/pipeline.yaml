apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: spring-boot-angular-pipeline
spec:
  params:
    - name: SPRING_BOOT_IMAGE
      description: Image description for Spring Boot
      type: string
      default: "docker.io/alichabchoub/backend:0.0.2"
    - name: ANGULAR_IMAGE
      description: Image description for Angular
      type: string
      default: "docker.io/alichabchoub/angular-app:0.0.3"
    - name: MONGODB_IMAGE
      description: Image description for MongoDB
      type: string
      default: "docker.io/alichabchoub/mongo:4.4.7"
  workspaces:
    - name: linked-workspace
    - name: backend-source
    - name: frontend-source
    - name: mongo-manifest-dir
    - name: backend-manifest-dir
    - name: frontend-manifest-dir
  tasks:
    - name: fetch-spring-boot
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: backend-source
      params:
        - name: url
          value: https://github.com/chebchoub/Ticketing_platform.git
        - name: subdirectory
          value: "backend"  # Adjusted to point to the backend folder
        - name: deleteExisting
          value: "true"
    - name: build-spring-boot
      taskRef:
        name: buildah
      runAfter:
        - fetch-spring-boot
      workspaces:
        - name: source
          workspace: backend-source
      params:
        - name: IMAGE
          value: "$(params.SPRING_BOOT_IMAGE):$(params.TAG)"
        - name: CONTEXT
          value: "backend"  # Adjusted to point to the backend folder
        - name: FORMAT
          value: "docker"
    - name: fetch-angular
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: frontend-source
      params:
        - name: url
          value: https://github.com/aymenZargouni/Ticketing_platform.git
        - name: subdirectory
          value: "front-end"  # Adjusted to point to the frontend folder
        - name: deleteExisting
          value: "true"
    - name: build-angular
      taskRef:
        name: angular-build
      runAfter:
        - fetch-angular
      workspaces:
        - name: source
          workspace: frontend-source
      params:
        - name: IMAGE
          value: "$(params.ANGULAR_IMAGE):$(params.TAG)"
        - name: CONTEXT
          value: "front-end"  # Adjusted to point to the frontend folder
        - name: FORMAT
          value: "docker"  
    - name: create-mongo-deployment
      taskRef:
        name: kubernetes-actions
      runAfter:
        - build-spring-boot
      params:
        - name: script
          value: |
            kubectl apply -f https://github.com/aymenZargouni/Ticketing_platform.git/master/manifest/MongoDB-deployment.yaml
      workspaces:
        - name: mongo-manifest-dir
          workspace: mongo-manifest-dir
    - name: create-deployment
      taskRef:
        name: kubernetes-actions
      runAfter:
        - create-mongo-deployment
        - build-angular
      params:
        - name: script
          value: |
            kubectl apply -f  https://github.com/aymenZargouni/Ticketing_platform.git/master/manifest/backend-deployment.yaml
            kubectl apply -f  https://github.com/aymenZargouni/Ticketing_platform.git/master/manifest/frontend-deployment.yaml
      workspaces:
        - name: manifest-dir
          workspace: linked-workspace
